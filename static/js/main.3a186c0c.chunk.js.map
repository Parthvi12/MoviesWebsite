{"version":3,"sources":["logo.svg","Movie.js","components/MovieDetail.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","props","movie","poster_path","title","release_date","id","to","className","src","alt","MovieList","useState","movieData","setMovieData","useEffect","fetchData","a","fetch","response","console","log","json","results","Fragment","map","MovieDetail","useParams","url","moviesDetail","setMoviesDetail","isLoading","setIsLoading","style","backgroundImage","backdrop_path","backgroundRepeat","backgroundSize","width","height","position","zIndex","margin","tagline","textAlign","overview","genres","genre","name","href","videos","video","key","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a186c0c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./css/Movie.css\";\n\nconst MovieList = () => {\n  const [movieData, setMovieData] = useState([]);\n\n  const url =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=6dda08f4baa3d9a8948875819f76ccd2\";\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    let response = await fetch(url);\n    console.log(response);\n    const movieData = await response.json();\n    console.log(movieData);\n    setMovieData(movieData.results);\n  };\n  return (\n    <React.Fragment>\n      <article className=\"Movies\">\n        {movieData.map((movie) => {\n          return <MovieCard movie={movie}></MovieCard>;\n        })}\n      </article>\n    </React.Fragment>\n  );\n};\nconst MovieCard = (props) => {\n  const imgurl = \"https://image.tmdb.org/t/p/w500\";\n  const { poster_path, title, release_date, id } = props.movie;\n  return (\n    <Link to={`/movie/${id}`}>\n      <section className=\"mlist\">\n        <img src={imgurl + poster_path} alt=\" \" />\n        <h4>{title}</h4>\n        <h5>{release_date}</h5>\n      </section>\n    </Link>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport \"../css/MovieCard.css\";\n\nexport default function MovieDetail(props) {\n  let { id } = useParams();\n  let url = `https://api.themoviedb.org/3/movie/${id}?api_key=6dda08f4baa3d9a8948875819f76ccd2&append_to_response=videos`;\n  const [moviesDetail, setMoviesDetail] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    let response = await fetch(url);\n    console.log(response);\n    const moviesDetail = await response.json();\n    console.log(moviesDetail);\n    setMoviesDetail(moviesDetail);\n    setIsLoading(false);\n  };\n  const imgurl = \"https://image.tmdb.org/t/p/w500\";\n  const bgBaseURL = \"https://image.tmdb.org/t/p/original\";\n  const videoURL = \"https://www.youtube.com/watch?v=\";\n\n  return isLoading ? (\n    <> Loading... </>\n  ) : (\n    <>\n      <div\n        className=\"moviecard\"\n        style={{\n          backgroundImage: `url(${bgBaseURL + moviesDetail.backdrop_path})`,\n          backgroundRepeat: \"no-repeat\",\n          backgroundSize: \"cover\",\n          width: \"100%\",\n          height: \"100vh\",\n          position: \"absolute\",\n          zIndex: \"-1\",\n        }}\n      ></div>\n\n      <div className=\"container\">\n        <img\n          className=\"imgbody\"\n          style={{ height: \"500px\" }}\n          src={imgurl + moviesDetail.poster_path}\n          alt=\"\"\n        />\n        <div className=\"textbody\">\n          <h1 style={{ margin: \"0.5rem\" }}>{moviesDetail.title}</h1>\n          <h4 style={{ margin: \"0.5rem\" }}>{moviesDetail.tagline}</h4>\n          <p style={{ textAlign: \"justify\", margin: \"0.5rem\" }}>\n            {moviesDetail.overview}\n          </p>\n          <div>\n            {moviesDetail.genres.map((genre) => (\n              <div className=\"genres\">{genre.name}</div>\n            ))}\n          </div>\n\n          <a\n            className=\"trailer\"\n            href={\n              videoURL + moviesDetail.videos.results.map((video) => video.key)\n            }\n          >\n            Watch trailer\n          </a>\n        </div>\n      </div>\n    </>\n  );\n}\n//const Movie = (props) => {};\n","import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\nimport \"./css/App.css\";\nimport MovieList from \"./Movie.js\";\nimport MovieDetail from \"./components/MovieDetail\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/movie/:id\">\n            <MovieDetail />\n          </Route>\n          <Route path=\"/\">\n            <MovieList />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}